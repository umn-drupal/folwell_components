<?php
/**
 * @file
 * Update hooks for Folwell Paragraphs module.
 */
use Symfony\Component\Yaml\Yaml;
use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\Core\Config\FileStorage;

/**
 * Update configuration to include Callout paragraphs
 */
function folwell_paragraphs_update_8001(&$sandbox) {
  $module_path = drupal_get_path('module', 'folwell_paragraphs');

  // Create Paragraphs bundle.
  folwell_paragraphs_read_in_new_config('paragraphs.paragraphs_type.folwell_callout', $module_path);

  // Create field storage & instances.
  $field_configs = [
    'field.storage.paragraph.field_fw_callout_image',
    'field.storage.paragraph.field_fw_callout_style',
    'field.field.paragraph.folwell_callout.field_fa_accordion_item_header',
    'field.field.paragraph.folwell_callout.field_fa_text_item_body',
    'field.field.paragraph.folwell_callout.field_fw_callout_image',
    'field.field.paragraph.folwell_callout.field_fw_callout_style',
  ];
  folwell_paragraphs_add_field_configs($field_configs, $module_path);

  // Create Paragraphs bundle form.
  folwell_paragraphs_read_in_new_config('core.entity_form_display.paragraph.folwell_callout.default', $module_path);
  // Create Paragraphs bundle view.
  folwell_paragraphs_read_in_new_config('core.entity_view_display.paragraph.folwell_callout.default', $module_path);

  // Send message to updater.
  $message = t('The Folwell Callout Paragraphs bundle installed successfully');
  return $message;

}

/**
 * Update configuration to include image styles and media view modes.
 */
function folwell_paragraphs_update_8002(&$sandbox) {
  $module_path = drupal_get_path('module', 'folwell_paragraphs');
  $base_configs = [
    'image.style.folwell_third',
    'image.style.folwell_half',
    'image.style.folwell_full',
    'image.style.folwell_fifth',
    'paragraphs.paragraphs_type.folwell_20_image',
    'paragraphs.paragraphs_type.folwell_33_image',
    'paragraphs.paragraphs_type.folwell_50_image',
    'paragraphs.paragraphs_type.folwell_100_image',
    'paragraphs.paragraphs_type.folwell_image',
  ];
  foreach ($base_configs as $config) {
    folwell_paragraphs_read_in_new_config($config, $module_path);
  }

  // Create field storage & instances.
  $field_configs = [
    'field.storage.paragraph.field_folwell_image_item',
    'field.field.paragraph.folwell_20_image.field_fw_callout_image',
    'field.field.paragraph.folwell_33_image.field_fw_callout_image',
    'field.field.paragraph.folwell_50_image.field_fw_callout_image',
    'field.field.paragraph.folwell_100_image.field_fw_callout_image',
    'field.field.paragraph.folwell_image.field_folwell_image_item',
  ];
  folwell_paragraphs_add_field_configs($field_configs, $module_path);

  $display_configs = [
    'core.entity_form_display.paragraph.folwell_20_image.default',
    'core.entity_form_display.paragraph.folwell_33_image.default',
    'core.entity_form_display.paragraph.folwell_50_image.default',
    'core.entity_form_display.paragraph.folwell_100_image.default',
    'core.entity_form_display.paragraph.folwell_image.default',
    'core.entity_view_mode.media.folwell_fifth',
    'core.entity_view_mode.media.folwell_full',
    'core.entity_view_mode.media.folwell_half',
    'core.entity_view_mode.media.folwell_third',
    'core.entity_view_display.media.image.folwell_fifth',
    'core.entity_view_display.media.image.folwell_full',
    'core.entity_view_display.media.image.folwell_half',
    'core.entity_view_display.media.image.folwell_third',
    'core.entity_view_display.paragraph.folwell_20_image.default',
    'core.entity_view_display.paragraph.folwell_33_image.default',
    'core.entity_view_display.paragraph.folwell_50_image.default',
    'core.entity_view_display.paragraph.folwell_100_image.default',
    'core.entity_view_display.paragraph.folwell_image.default',
  ];
  foreach ($display_configs as $config) {
    folwell_paragraphs_read_in_new_config($config, $module_path);
  }

}

/**
 * Reads in new configuration.
 * Shamelessly stolen from Bootstrap Paragraphs
 * (http://drupal.org/project/bootstrap_paragraphs)
 *
 * @param string $config_name
 *   Configuration name.
 * @param string $module_path
 *   Base path.
 */
function folwell_paragraphs_read_in_new_config($config_name, $module_path) {
  /** @var \Drupal\Core\Config\StorageInterface $active_storage */
  $active_storage = \Drupal::service('config.storage');
  $active_storage->write($config_name, Yaml::parse(
    file_get_contents($module_path . '/config/install/' . $config_name . '.yml')
  ));
}

function folwell_paragraphs_add_field_configs($config_list, $module_path) {
  foreach ($config_list as $config) {
    $config_storage = new FileStorage($module_path . '/config/install');
    $config_record = $config_storage->read($config);
    $entity_type = \Drupal::service('config.manager')->getEntityTypeIdByName(
      $config
    );
    /** @var \Drupal\Core\Config\Entity\ConfigEntityStorageInterface $storage */
    $storage = \Drupal::entityTypeManager()->getStorage($entity_type);
    $entity = $storage->createFromStorageRecord($config_record);
    $entity->save();
  }
}