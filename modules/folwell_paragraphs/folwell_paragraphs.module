<?php
/**
 * @file
 * Folwell Paragraphs hook implementations
 */

/**
 * Implements hook_theme().
 *
 * Providing base hook for fields allows us to supply templates here.
 */
function folwell_paragraphs_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__folwell_accordion' => [
      'base hook' => 'paragraph'
    ],
    'paragraph__fa_accordion_item' => [
      'base hook' => 'paragraph'
    ],
    'paragraph__fa_table' => [
      'base hook' => 'paragraph'
    ],
    'paragraph__fa_text_with_optional_header' => [
      'base hook' => 'paragraph'
    ],
    'paragraph__folwell_callout' => [
      'base hook' => 'paragraph'
    ],
    'paragraph__folwell_overlay' => [
      'base hook' => 'paragraph'
    ],
    'paragraph__folwell_slideshow' => [
      'base hook' => 'paragraph',
      'template' => 'folwell-slideshow'
    ],
    'paragraph__folwell_overlay_slideshow' => [
      'base hook' => 'paragraph',
      'template' => 'folwell-slideshow'
    ],
    'paragraph__fs_overlay_slide' => [
      'base hook' => 'paragraph',
    ],
    'field__paragraph__field_fa_accordion_item_header__fs_slide' => [
      'base hook' => 'field'
    ],
    'paragraph__folwell_image' => [
      'base hook' => 'paragraph',
    ],
  ];
}

/**
 * Implements template_preprocess_paragraph().
 *
 * Attach libraries as necessary, send relevant classes to templates.
 */
function folwell_paragraphs_preprocess_paragraph(&$variables) {
  $paragraph = $variables['paragraph'];
  $type = $paragraph->getType();
  switch ($type) {
    case 'folwell_accordion':
      $variables['#attached']['library'][] = 'folwell_components/folwell_accordion';
      break;

    case 'folwell_callout':
      $variables['#attached']['library'][] = 'folwell_components/fwcallout';
      $style_field = $paragraph->get('field_fw_callout_style');
      $variables['style_class'] = $style_field->get(0)->getString();
      break;

    case 'folwell_overlay_slideshow':
      $variables['#attached']['library'][] = 'folwell_components/folwell_slider';
      $variables['#attached']['library'][] = 'folwell_components/fwcallout';
      break;

    case 'fs_overlay_slide':
      $position_field = $paragraph->get('field_fs_position');
      $position_class = $position_field->get(0)->getString();
      $variables['overlay_classes'] = [
        'align-' . $position_class,
        'display-33',
        'callout-overlay',
        'bg-gold-light'
      ];
      break;

    case 'folwell_image':
      $image_paragraph = $paragraph->get('field_folwell_image_item')->get(0)->view();
      $display_type = $image_paragraph['#paragraph']->getType();
      $class_map = [
        'folwell_20_image' => 'display-20',
        'folwell_33_image' => 'display-33',
        'folwell_50_image' => 'display-50',
        'folwell_100_image' => 'display-100',
      ];
      $variables['display_class'] = $class_map[$display_type];
      break;

    default:
      return;
  }
}
