{"version":3,"sources":["../../stdin","_includes.scss","../../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss"],"names":[],"mappings":"AAGA,kBACE,oBAAoB,CACpB,gBAAgB,CAChB,iBAAiB,CACjB,2BCLS,CDMT,eCCoB,CDApB,eAAe,CACf,aAAa,CACb,iBAAiB,CACjB,iBAAiB,CACjB,mBAAmB,CACnB,sBAAsB,CACtB,yBAAyB,CACzB,mBAAmB,EAwCpB;;AArDD,yBAgBI,iBCTQ,CDUR,YClBO,CDmBP,iBAAiB,CACjB,sDCPyD,CDQzD,eAAe,CACf,aAAa,CACb,UAAU,CACV,oBAAoB,CACpB,mBAAmB,CACnB,mBAAmB,CACnB,WAAW,CACX,yCAAoB,CAApB,iCAAoB,CACpB,YAAY,EACb;;AA7BH,qCAgCI,UAAU,EACX;;AAjCH,uBAoCI,eAAe,CACf,mBAAmB,CACnB,gBAAgB,CAChB,kBAAkB,CAClB,gBAAgB,CAChB,eCtCiB,EDuClB;;AA1CH,8BA6CI,YAAY,CACZ,YAAY,EACb;;AEcC,2BF7DJ,kBAkDI,yBAAyB,CACzB,mBAAmB,EAEtB,EAAA","file":"../pullquote.css","sourcesContent":["//Pullquote and Blockquote: Folwell Theme Component\n@import \"includes\";\n\naside.pullquote {\n  border-style: solid;\n  border-width: 0;\n  border-bottom: 0;\n  border-top: 6px solid $gold;\n  color: $maroon-light;\n  display: block;\n  float: right;\n  font-size: 1.9em;\n  font-weight: 400;\n  line-height: 1.5em;\n  margin: 1em 1em 1.3em;\n  padding: 1.3em 1em 0 1em;\n  position: relative;\n\n  &:before {\n    background: $white;\n    color: $gold;\n    content: \"\\201C\";\n    font-family: $font-stack-georgia;\n    font-size: 5em;\n    height: 4rem;\n    left: 50%;\n    line-height: 1.08em;\n    position: absolute;\n    text-align: center;\n    top: -17px;\n    transform: translate(-50%, -50%);\n    width: 8rem;\n  }\n\n  .pullquote-content {\n    margin: 0;\n  }\n\n  cite {\n    display: block;\n    font-style: italic;\n    font-size: 18px;\n    line-height: 40px;\n    margin-top: 1em;\n    color: $gray-medium;\n  }\n\n  &.display-100 {\n    float: none;\n    width: auto;\n  }\n\n  @include breakpoint(max-width $small-screen) {\n    margin: 1em 0 !important;\n    line-height: 1.2em;\n  }\n}\n","@import \"breakpoint\";\n$blue: #00f;\n$gold: #fc3;\n$gold-light: #ffde7a;\n$gold-header: #ffd75f;\n$gray-lighter: #f0efee;\n$gray-medium: #777677;\n$gray-dark: #5a5a5a;\n$gray-darker: #333;\n$maroon-light: #900021;\n$white: #fff;\n$off-white: #f9f7f6;\n$light-bg: #ddd;\n$callout-break: 50em;\n$accent-border: solid $gold;\n$font-stack-georgia: Georgia, Times, \"Times New Roman\", serif;\n$small-screen: 30em !default;\n\n$font-stack-open-sans: 'Open Sans', sans-serif;\n$base-font-family: $font-stack-open-sans, !default;\n$base-line-height: 1.5;\n\n@mixin accent-border($side: all) {\n  @if ($side == all) {\n    border: 4px $accent-border;\n  } @else {\n    border-#{$side}: 6px $accent-border;\n  }\n}\n\n@mixin font-awesome($font-size: inherit) {\n  font-family: \"Font Awesome 5 Free\";\n  font-size: $font-size;\n  font-weight: 900;\n}\n","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n"]}