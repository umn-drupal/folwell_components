{"version":3,"sources":["../../stdin","../../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss"],"names":[],"mappings":"AASA,iUASM,iBAAiB,EAClB;;AAVL,qjBAoBM,cAAc,CACd,oBAAoB,EACrB;;AAtBL,yFA0BI,iBAAiB,EAClB;;AA3BH,4FA8BI,iBAAiB,EAClB;;AAGH,WACE,gBAAgB,CAChB,mBAAmB,EASpB;;AAXD,uBAKI,iBAAiB,EAKlB;;ACWC,2BDrBJ,uBAQM,cAAc,EAEjB,EAAA;;AAGH,sBACE,cAAc,CACd,oBAvDkB,EA4DnB;;AAPD,4BAKI,QAAO,EACR;;AAGH,mBACE,gBAAgB,EACjB;;AAED,sBACE,uBApES,EAqEV;;AAED,sBACE,2BAxES,EAyEV;;AAED,uBACE,4BA5ES,EA6EV;;AAED,sBACE,0BA9EoB,EA+ErB;;AAED,qCAAqC;AACrC,mBACE,eAAe,EA+BhB;;AAhCD,+BAII,mBAAmB,CACnB,UAAU,EACX;;AANH,+BASI,mBAAmB,CACnB,WAAW,CACX,SAAS,EACV;;AAZH,8BAeI,mBAAmB,CACnB,UAAU,CACV,SAAS,EACV;;ACxCC,2BDsBJ,0HAyBM,mBAAmB,CACnB,OAAO,CACP,uBAAsB,CACtB,QAAQ,CACR,8BAA8B,EAC/B,EAAA;;AAIL,qBAEI,YAAY,EACb;;AAHH,4BAMI,cAAc,EACf","file":"../callout.css","sourcesContent":["// Callouts: Folwell Theme Component\n@import 'breakpoint';\n$gold: #fc3;\n$gold-light: #ffde7a;\n$gray-lighter: #f0efee;\n$callout-break: max-width 50em;\n$accent-border: 4px solid $gold;\n\n// Base Callout Content\n.callout,\n.callout-overlay,\n.callout-horizontal {\n  h5,\n  h4,\n  h3,\n  h2,\n  h1 {\n    a {\n      border-bottom: 0;\n    }\n  }\n\n  h6,\n  h5,\n  h4,\n  h3,\n  h2,\n  h1 {\n    &:first-child {\n      margin-top: 0;\n      margin-bottom: 15px;\n    }\n  }\n\n  p:last-child {\n    margin-bottom: 0;\n  }\n\n  ul:last-child {\n    margin-bottom: 0;\n  }\n}\n\n.callout {\n  padding: 1.25em;\n  margin-bottom: 1em;\n\n  &:first-child {\n    margin-top: 30px;\n\n    @include breakpoint($callout-break) {\n      margin-top: 0;\n    }\n  }\n}\n\n.callout-horizontal {\n  display: flex;\n  background: $gold-light;\n\n  &>div {\n    flex:1;\n  }\n}\n\n.callout-content {\n  padding: 1.25em;\n}\n\n.callout-border-all {\n  border: $accent-border;\n}\n\n.callout-border-top {\n  border-top: $accent-border;\n}\n\n.callout-border-left {\n  border-left: $accent-border;\n}\n\n.callout-background {\n  background-color: $gray-lighter;\n}\n\n/* Specific callout overlay styles */\n.callout-overlay {\n  padding: 1.1em;\n\n  &.display-100 {\n    position: absolute;\n    bottom: 0;\n  }\n\n  &.align-right {\n    position: absolute;\n    right: 2em;\n    top: 2em;\n  }\n\n  &.align-left {\n    position: absolute;\n    left: 2em;\n    top: 2em;\n  }\n\n  @include breakpoint($callout-break) {\n    &.display-100,\n    &.align-right,\n    &.align-left,\n    &.bg-gold-light {\n      position: relative;\n      top: 0;\n      width:100% !important;\n      left: 0;\n      margin-bottom: 1em !important;  \n    }\n  }\n}\n\n.callout-image {\n  img {\n    width: 100%;\n  }\n\n  & + .callout {\n    margin-top: 0;\n  }\n}\n","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n"]}