{"version":3,"sources":["../../stdin","../../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss","_includes.scss"],"names":[],"mappings":"AAIA,iUASM,iBAAiB,EAClB;;AAVL,qjBAoBM,cAAc,CACd,oBAAoB,EACrB;;AAtBL,yFA0BI,iBAAiB,EAClB;;AA3BH,4FA8BI,iBAAiB,EAClB;;AAGH,WACE,gBAAgB,CAChB,mBAAmB,EASpB;;AAXD,uBAKI,cAAc,EAKf;;ACgBC,2BD1BJ,uBAQM,iBAAiB,EAEpB,EAAA;;AAGH,sBACE,eAAe,CACf,oBEnDkB,EFiEnB;;AAhBD,8BAKI,UAAU,EACX;;ACOC,2BDbJ,sBASI,cAAc,CACd,4BAA4B,EAM/B;EAhBD,4BAaM,QAAQ,EACT,EAAA;;AAIL,sBEvDI,uBAbO,EFsEV;;AAED,sBExDI,2BAhBO,EF0EV;;AAED,uBE5DI,4BAhBO,EF8EV;;AAED,sBACE,0BE/EoB,EFgFrB;;AAED,qCAAqC;AACrC,mBACE,eAAe,CACf,mBAAmB,EAiCpB;;AAnCD,+BAKI,UAAU,EACX;;AANH,wDAUI,SAAS,EACV;;AAXH,8DAeI,YAAY,EACb;;AAhBH,4DAoBI,WAAW,EACZ;;AArBH,0DAyBI,UAAU,EACX;;AChDC,2BDsBJ,mBA6BM,mBAAmB,CACnB,OAAO,CACP,uBAAuB,CACvB,QAAQ,CACR,8BAA8B,EAEnC,EAAA;;AAED,qBAEI,YAAY,CACZ,aAAa,CACb,eAAe,EAChB;;AALH,4BAQI,cAAc,EACf","file":"../callout.css","sourcesContent":["// Callouts: Folwell Theme Component\n@import \"includes\";\n\n// Base Callout Content\n.callout,\n.callout-overlay,\n.callout-horizontal {\n  h5,\n  h4,\n  h3,\n  h2,\n  h1 {\n    a {\n      border-bottom: 0;\n    }\n  }\n\n  h6,\n  h5,\n  h4,\n  h3,\n  h2,\n  h1 {\n    &:first-child {\n      margin-top: 0;\n      margin-bottom: 15px;\n    }\n  }\n\n  p:last-child {\n    margin-bottom: 0;\n  }\n\n  ul:last-child {\n    margin-bottom: 0;\n  }\n}\n\n.callout {\n  padding: 1.25em;\n  margin-bottom: 1em;\n\n  &:first-child {\n    margin-top: 0;\n\n    @include breakpoint($callout-break) {\n      margin-top: 30px;\n    }\n  }\n}\n\n.callout-horizontal {\n  display: block;\n  background: $gold-light;\n\n  article {\n    margin: 0;\n  }\n\n  @include breakpoint($callout-break) {\n    display: flex;\n    flex-direction: row-reverse;\n\n    & > div {\n      flex: 1;\n    }\n  }\n}\n\n.callout-border-all {\n  @include accent-border();\n}\n\n.callout-border-top {\n  @include accent-border(top);\n}\n\n.callout-border-left {\n  @include accent-border(left);\n}\n\n.callout-background {\n  background-color: $gray-lighter;\n}\n\n/* Specific callout overlay styles */\n.callout-overlay {\n  padding: 1.1em;\n  position: absolute;\n\n  &.display-100 {\n    bottom: 0;\n  }\n\n  &.top-right,\n  &.top-left {\n    top: 2em;\n  }\n\n  &.bottom-right,\n  &.bottom-left {\n    bottom: 2em;\n  }\n\n  &.top-right,\n  &.bottom-right {\n    right: 2em;\n  }\n\n  &.top-left,\n  &.bottom-left {\n    left: 2em;\n  }\n\n  @include breakpoint(max-width $callout-break) {\n      position: relative;\n      top: 0;\n      width: 100% !important;\n      left: 0;\n      margin-bottom: 1em !important;\n  }\n}\n\n.callout-image {\n  img {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n\n  & + .callout {\n    margin-top: 0;\n  }\n}\n","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n","@import 'breakpoint';\n$gold: #fc3;\n$gold-light: #ffde7a;\n$gray-lighter: #f0efee;\n$gray-medium: #777677;\n$maroon-light: #900021;\n$white: #fff;\n$callout-break: 50em;\n$accent-border: solid $gold;\n$font-stack-georgia: Georgia, Times, 'Times New Roman', serif;\n$small-screen: 30em !default;\n\n@mixin accent-border($side: all) {\n  @if ($side == all) {\n    border: 4px $accent-border;\n  }\n  @else {\n    border-#{$side}: 6px $accent-border;\n  }\n}"]}